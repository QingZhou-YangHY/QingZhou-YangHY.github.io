<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on DaYang</title>
        <link>http://localhost:1313/post/</link>
        <description>Recent content in Posts on DaYang</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>DaYang</copyright>
        <lastBuildDate>Thu, 02 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>STILL3论文精读</title>
        <link>http://localhost:1313/p/still3%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/</link>
        <pubDate>Thu, 02 Oct 2025 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/still3%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/</guid>
        <description>&lt;img src="http://localhost:1313/p/still3%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/1.jpg" alt="Featured image of post STILL3论文精读" /&gt;</description>
        </item>
        <item>
        <title>veRL沉淀（暂未想好名字）</title>
        <link>http://localhost:1313/p/verl%E6%B2%89%E6%B7%80%E6%9A%82%E6%9C%AA%E6%83%B3%E5%A5%BD%E5%90%8D%E5%AD%97/</link>
        <pubDate>Wed, 01 Oct 2025 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/verl%E6%B2%89%E6%B7%80%E6%9A%82%E6%9C%AA%E6%83%B3%E5%A5%BD%E5%90%8D%E5%AD%97/</guid>
        <description>&lt;img src="http://localhost:1313/sky.jpg" alt="Featured image of post veRL沉淀（暂未想好名字）" /&gt;&lt;h1 id=&#34;强化学习的流程&#34;&gt;强化学习的流程
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;加载模型（无需修改）&lt;br&gt;
veRL使用Ray框架进行模型的调度&lt;br&gt;
init_workers 初始化策略模型、参考模型、价值模型、奖励模型。这里面有些模型不会用到。很多都不会使用价值模型，奖励模型也都是基于规则的&lt;/li&gt;
&lt;li&gt;训练过程&lt;br&gt;
get_data_batch(无需修改)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;generate_sequencesnormal-rl和agent-rl&#34;&gt;generate_sequences(normal-rl和agent-rl)
&lt;/h5&gt;&lt;p&gt;normal-rl：单轮的交互（prompt&amp;ndash;&amp;gt;model&amp;ndash;&amp;gt;response），这个流程就结束了&lt;br&gt;
agent-rl：多轮的交互（prompt&amp;ndash;&amp;gt;model&amp;ndash;&amp;gt;response&amp;ndash;&amp;gt;env（tool call,code exec ,etc）&amp;ndash;&amp;gt;model&amp;ndash;&amp;gt;response&amp;ndash;&amp;gt;&amp;hellip;）&lt;br&gt;
reward（通过自定义的奖励函数控制，一般无需修改）不用去修改veRL框架，通过配置文件进行修改&lt;br&gt;
log_probs（计算策略模型和参考模型输出token的概率，一般无需修改）&lt;br&gt;
values(目前主流的rl算法基本上都在舍弃价值模型，一般无需修改)&lt;/p&gt;
&lt;h5 id=&#34;adv各rl算法之间的差异主要体现在adv的计算方式此处需要针对不同的算法进行修改&#34;&gt;adv(各rl算法之间的差异主要体现在adv的计算方式，此处需要针对不同的算法进行修改)
&lt;/h5&gt;&lt;h5 id=&#34;compute_lossnormal-rl和agent-rl&#34;&gt;compute_loss（normal-rl和agent-rl）
&lt;/h5&gt;&lt;p&gt;normal-rl：无需和环境交互，response中token全部由模型生成，均参与损失计算&lt;br&gt;
agent-rl：需要获取观测结果，观测结果部分不是模型生成，计算损失时需要对其进行mask&lt;br&gt;
update actor（无需修改）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>大型推理模型的强化学习综述个人解读</title>
        <link>http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/</link>
        <pubDate>Wed, 24 Sep 2025 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/</guid>
        <description>&lt;img src="http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/sky.jpg" alt="Featured image of post 大型推理模型的强化学习综述个人解读" /&gt;&lt;h1 id=&#34;a-survey-of-reinforcement-learning-for-large-reasoning-models&#34;&gt;A Survey of Reinforcement Learning for Large Reasoning Models
&lt;/h1&gt;&lt;h2 id=&#34;background&#34;&gt;Background
&lt;/h2&gt;&lt;p&gt;RL在推进LLM能力的前沿方面取得了显著成功，特别是在解决数学和编码等复杂逻辑任务方面。因此，RL已成为将LLM转化为LRM的基础方法。&lt;/p&gt;
&lt;p&gt;需要探索提高强化学习向人工超级智能（ASI）的可扩展性的策略。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/history.jpg&#34;
	width=&#34;1313&#34;
	height=&#34;621&#34;
	srcset=&#34;http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/history_hu_fd91b4e2f759ffa.jpg 480w, http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/history_hu_493c3c9057a75b6c.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;这两年的发展&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;211&#34;
		data-flex-basis=&#34;507px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/overview.jpg&#34;
	width=&#34;1304&#34;
	height=&#34;615&#34;
	srcset=&#34;http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/overview_hu_5f42649c3469429c.jpg 480w, http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/overview_hu_9c488682e473c029.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;具体包含的模块&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;212&#34;
		data-flex-basis=&#34;508px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;回顾一下大致流程吧！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/agentProgress.jpg&#34;
	width=&#34;762&#34;
	height=&#34;339&#34;
	srcset=&#34;http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/agentProgress_hu_4d7c597a2ebaeebd.jpg 480w, http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/agentProgress_hu_b9f415b03c60b5a9.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;agentProgress&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;224&#34;
		data-flex-basis=&#34;539px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/LMProgress.jpg&#34;
	width=&#34;479&#34;
	height=&#34;394&#34;
	srcset=&#34;http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/LMProgress_hu_1f5e4f08ac92e4f2.jpg 480w, http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/LMProgress_hu_7cd98ff41913c5e4.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;LMProgress&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;121&#34;
		data-flex-basis=&#34;291px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;简单讲解一下rl应用到语言模型的时候这些概念映射到了哪里&#34;&gt;简单讲解一下RL应用到语言模型的时候，这些概念映射到了哪里
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Prompt/Task（x）：对应于初始状态或环境上下文，从数据分布中提取，对应于数据集D。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Policy (πθ):表示语言模型，它根据提示生成一个长度为T的序列，表示为y=（y1，…，yT）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;State (st):定义为提示以及到目前为止生成的令牌，即st=（x，a1:t−1）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Action (at):在步骤t从动作空间A中选择的单元。根据粒度，动作可以是整个序列y（序列级）、∈V处的令牌（令牌级）或 片段&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transition Dynamics (P):在LLM的上下文中，状态转换通常是确定的，因为st+1=[st，at]，其中[·，·]表示字符串连接。当状态包含EOS令牌时，策略将转换为终端状态，这意味着轨迹结束。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reward (R(x, y) or rt):基于动作粒度进行分配，例如，轨迹末端的序列级别R（x，y），每个令牌的令牌级别rt=R（x、a1:t），或每个分段的步长级别rk=R（x、y（1:k））。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Return (G):提示x的整个轨迹y的累积奖励（通常在有限时间内γ=1）。它通过序列级奖励简化为单个标量R（x，y），否则按每个令牌/步骤聚合奖励&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;frontier-models&#34;&gt;Frontier Models
&lt;/h2&gt;&lt;p&gt;按时间顺序排列在三个主要方向上：LRM、agentic LRMs和多模态LRM。&lt;br&gt;
一个大型推理模型，OpenAI的o1[2024]系列，建立了将训练时间RL和测试时间计算扩展到更强大的推理能力的有效性，在数学、编码和科学基准测试方面取得了领先成果。&lt;br&gt;
DeepSeek的旗舰模型R1[2025a]是第一个在基准测试中与o1性能相匹配的开源模型。它采用多阶段训练管道来确保全面的模型能力，并探索了没有监督微调的纯RL路线（即Zero RL）。&lt;br&gt;
其他专有模型发布紧随其后：Claude-3.7-Sonnet[2025a]以混合推理为特色，Gemini 2.0和2.5[2025]引入了更长的上下文长度，Seed Thinking 1.5[2025b]以跨领域的泛化为特色，o3[2025a]系列展示了越来越先进的推理能力。最近，OpenAI推出了他们的第一个开源推理模型gpt-oss-120b[2025a]，随后推出了GPT5[2025a]，这是他们迄今为止最强大的人工智能系统，可以在高效模型和更深入的推理模型gpt-5思维之间灵活切换。并行的开源努力继续扩大了格局。在Qwen家族中，QwQ-32B[2025g]与R1的表现相匹配，其次是Qwen3[2025a]系列，代表性型号Qwen3-235B进一步提高了基准分数。Skywork-OR1[2025d]模型套件基于R1蒸馏模型，并通过有效的数据混合和算法创新实现了可扩展的RL训练。Minimax-M1[2025a]是第一个有效地将混合注意力引入尺度RL的模型。其他作品包括Llama Nemotron Ultra[2025]，旨在平衡准确性和效率；Magistral 24B[2025]，通过RL从头开始训练，而不是从先前的模型中提炼；以及种子OSS[2025a]，强调长上下文推理能力。等等&amp;hellip;&lt;/p&gt;
&lt;p&gt;过去的一年发展迅速啊！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/models.jpg&#34;
	width=&#34;1297&#34;
	height=&#34;677&#34;
	srcset=&#34;http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/models_hu_8b9f390b6a5af111.jpg 480w, http://localhost:1313/p/%E5%A4%A7%E5%9E%8B%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%BB%BC%E8%BF%B0%E4%B8%AA%E4%BA%BA%E8%A7%A3%E8%AF%BB/models_hu_2544bbbdc362202a.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;models&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;191&#34;
		data-flex-basis=&#34;459px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-foundational-components&#34;&gt;1. Foundational Components
&lt;/h2&gt;&lt;h3 id=&#34;11-reward-design&#34;&gt;1.1 Reward Design
&lt;/h3&gt;&lt;p&gt;在1.1中，我们对LRM RL中的奖励设计进行了全面的考察。从可验证的奖励开始，DeepSeek-R1的成功就是例证，它通过可验证的奖励机制证明了RL的可扩展性。&lt;/p&gt;
&lt;p&gt;在1.2中，我们考察生成性奖励，其中模型用于验证或直接生成奖励信号。&lt;/p&gt;
&lt;p&gt;然而，可验证和生成性奖励通常都表示为稀疏的数值反馈。一个重要的互补维度在于奖励信号的密度。&lt;/p&gt;
&lt;p&gt;1.3相应地考察了包含密集奖励的方法。另一个分类轴涉及奖励是根据外部真实情况计算的，还是由模型直接估计的。&lt;/p&gt;
&lt;p&gt;这一区别促使我们在1.4中讨论无监督奖励。&lt;/p&gt;
&lt;p&gt;在这四个类别的基础上，我们在1.5中转向奖励塑造，在那里我们分析了组合或转换不同奖励信号以促进学习的策略。&lt;/p&gt;
&lt;h3 id=&#34;111verifiable-rewards&#34;&gt;1.1.1Verifiable Rewards
&lt;/h3&gt;&lt;p&gt;基于规则的奖励通过利用准确性和格式检查，为RL提供可扩展和可靠的训练信号，特别是在数学和代码任务中。&lt;/p&gt;
&lt;p&gt;Verifier定律强调，具有清晰和自动验证的任务可以实现高效的RL优化，而主观任务仍然具有挑战性。&lt;/p&gt;
&lt;h3 id=&#34;rule-based-rewards&#34;&gt;Rule-based Rewards
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Accuracy rewards:对于具有确定性结果的任务（例如数学），策略必须在规定的分隔符（通常为\boxed{…}）内产生最终解决方案。然后，自动检查器将此输出与地面实况进行比较。对于编码任务，单元测试或编译器提供通过/失败信号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Format rewards:这些奖励施加了一个结构约束，要求模型将其私有思想链放置在&lt;think&gt;和&lt;/inthink&gt;之间，并在单独的字段中输出最终答案（例如&lt;answer&gt;…&lt;/answer&gt;）。这提高了大规模RL中的可靠解析和验证&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;rule-based-verifier&#34;&gt;Rule-based Verifier
&lt;/h3&gt;&lt;p&gt;基于规则的奖励通常来自基于规则的验证器。这些依赖于大量手动编写的等价规则来确定预测的答案是否与基本事实相匹配。目前，广泛使用的数学验证器主要基于Python库Math-Verify1和SymPy2构建。此外，一些作品，如DAPO[2025d]和DeepScaleR[2025c]，也提供了开源和成熟的验证器。最近，Huang等人[2025e]强调了与基于规则和基于模型的验证器相关的独特局限性，为设计更可靠的奖励系统提供了信息。&lt;/p&gt;
&lt;h4 id=&#34;训练人工智能系统执行任务的难易程度与任务的可验证程度成正比&#34;&gt;训练人工智能系统执行任务的难易程度与任务的可验证程度成正比
&lt;/h4&gt;&lt;h3 id=&#34;112generative-rewards&#34;&gt;1.1.2Generative Rewards
&lt;/h3&gt;&lt;p&gt;写于2025/9/24晚21点56分，教学楼关门故回寝室。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2.Generative Rewards&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3.Dense Rewards&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4.Unsupervised Rewards&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;5.Rewards Shaping&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Policy Optimization&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.Policy Gradient&lt;/li&gt;
&lt;li&gt;2.Critic-Based Algorithms&lt;/li&gt;
&lt;li&gt;3.Critic-Free Algorithms&lt;/li&gt;
&lt;li&gt;4.Off-Policy Optimization&lt;/li&gt;
&lt;li&gt;5.Regularization Objectives&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sampling Strategy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.Dynamic Sampling&lt;/li&gt;
&lt;li&gt;2.Sampling Hyper-Parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Foundational Problems&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.RL&amp;rsquo;s Role&lt;br&gt;
Sharpening vs Discovery&lt;/li&gt;
&lt;li&gt;2.Model Prior&lt;br&gt;
Weak vs Strong&lt;/li&gt;
&lt;li&gt;3.Training Recipes&lt;br&gt;
Tricks vs Traps&lt;/li&gt;
&lt;li&gt;4.RL vs. SFT&lt;br&gt;
Generalize vs Memorize&lt;/li&gt;
&lt;li&gt;5.Reward Type&lt;br&gt;
Process vs Outcome&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Training Resource&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.Static Corpus
&lt;ul&gt;
&lt;li&gt;Math&lt;/li&gt;
&lt;li&gt;Code&lt;/li&gt;
&lt;li&gt;STEM&lt;/li&gt;
&lt;li&gt;Agent&lt;/li&gt;
&lt;li&gt;Mixture&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2.RL Infrastructure &amp;amp; Framework&lt;br&gt;
e.g.OpenRLHF/veRL/AReaL/slime/TRL&lt;/li&gt;
&lt;li&gt;3.Dynamic Environment
&lt;ul&gt;
&lt;li&gt;Rule&lt;/li&gt;
&lt;li&gt;Code&lt;/li&gt;
&lt;li&gt;Game&lt;/li&gt;
&lt;li&gt;Model&lt;/li&gt;
&lt;li&gt;Ensemble&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Applications&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.Agentic Tasks&lt;/li&gt;
&lt;li&gt;2.Coding Tasks&lt;/li&gt;
&lt;li&gt;3.Multimodal Tasks&lt;/li&gt;
&lt;li&gt;4.Robotics Tasks&lt;/li&gt;
&lt;li&gt;5.Multi-Agent Systems&lt;/li&gt;
&lt;li&gt;6.Medical Tasks&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>Pass@k论文复现</title>
        <link>http://localhost:1313/p/pass@k%E8%AE%BA%E6%96%87%E5%A4%8D%E7%8E%B0/</link>
        <pubDate>Sun, 21 Sep 2025 16:00:00 +0800</pubDate>
        
        <guid>http://localhost:1313/p/pass@k%E8%AE%BA%E6%96%87%E5%A4%8D%E7%8E%B0/</guid>
        <description>&lt;img src="http://localhost:1313/p/pass@k%E8%AE%BA%E6%96%87%E5%A4%8D%E7%8E%B0/ByteDance.jpg" alt="Featured image of post Pass@k论文复现" /&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pass@k%E8%AE%BA%E6%96%87%E5%A4%8D%E7%8E%B0/Seed.jpg&#34;
	width=&#34;400&#34;
	height=&#34;400&#34;
	srcset=&#34;http://localhost:1313/p/pass@k%E8%AE%BA%E6%96%87%E5%A4%8D%E7%8E%B0/Seed_hu_2d5c39b72441c640.jpg 480w, http://localhost:1313/p/pass@k%E8%AE%BA%E6%96%87%E5%A4%8D%E7%8E%B0/Seed_hu_e08f665f0403ee6b.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;passk论文复现&#34;&gt;Pass@k论文复现
&lt;/h1&gt;&lt;h2 id=&#34;passk-training-for-adptively-balancing-eplortion-and-exploitation-of-lrms&#34;&gt;Pass@k Training for Adptively Balancing Eplortion and Exploitation of LRMs
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/abs/2508.10751&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;arxiv文章&lt;/a&gt;👈&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/RUCAIBox/Passk_Training&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;github仓库&lt;/a&gt;👈&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://huggingface.co/datasets/RUC-AIBOX/Passk_Training_Maze&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Datasets&lt;/a&gt;👈&lt;/p&gt;
&lt;h3 id=&#34;versionsdependencies&#34;&gt;Versions/Dependencies
&lt;/h3&gt;&lt;p&gt;Python 3.10.18&lt;br&gt;
Ray 2.49.1&lt;br&gt;
grpcio 1.75.0&lt;br&gt;
Ubuntu 24.04.2 LTS&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;如何从huggingface上下载数据集和模型&#34;&gt;如何从huggingface上下载数据集和模型
&lt;/h3&gt;&lt;p&gt;从huggingface上下载文件有2种方式，一种是直接登录后在网页上下载；一种是通过huggingface-cli命令下载。&lt;/p&gt;
&lt;p&gt;本文介绍的是第二种下载方式。&lt;/p&gt;
&lt;h3 id=&#34;安装&#34;&gt;安装
&lt;/h3&gt;&lt;p&gt;对于huggingface-cli命令的下载直接通过pip命令安装即可：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pip install -U huggingface_hub[hub_transfer]&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;对于国内用户还可以通过设置镜像网站的方式加速下载：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#linux
export HF_ENDPOINT=https://hf-mirror.com&lt;br&gt;
#windows&lt;br&gt;
set HF_ENDPOINT=https://hf-mirror.com&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;使用命令行下载&lt;/p&gt;
&lt;h4 id=&#34;模型&#34;&gt;模型
&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;huggingface-cli download &amp;ndash;resume-download [1] &amp;ndash;local-dir [2] &amp;ndash;local-dir-use-symlinks False&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;数据集&#34;&gt;数据集
&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;huggingface-cli download &amp;ndash;repo-type dataset &amp;ndash;resume-download [3] &amp;ndash;local-dir [4] &amp;ndash;local-dir-use-symlinks False &amp;ndash;token hf_***&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;格式为：[1]和[3]表示项目的路径，格式为用户名/项目，比如mistralai/Mistral-7B-Instruct-v0.2表示的是mistralai下的7B instruct v0.2权重。[2]和[4]表示的是本地的保存地址。&lt;/p&gt;
&lt;p&gt;需要的注意的是有些仓库需要登录才可以下载，形如–token hf_***为huggingface的token配置。token的生成需要在huggingface个人页面生成.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ray.init()初始化挂起/失败问题的解决</title>
        <link>http://localhost:1313/p/ray.init%E5%88%9D%E5%A7%8B%E5%8C%96%E6%8C%82%E8%B5%B7/%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/</link>
        <pubDate>Sat, 20 Sep 2025 10:00:00 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ray.init%E5%88%9D%E5%A7%8B%E5%8C%96%E6%8C%82%E8%B5%B7/%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/</guid>
        <description>&lt;img src="http://localhost:1313/p/ray.init%E5%88%9D%E5%A7%8B%E5%8C%96%E6%8C%82%E8%B5%B7/%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/Ray.jpg" alt="Featured image of post ray.init()初始化挂起/失败问题的解决" /&gt;&lt;h2 id=&#34;abstract&#34;&gt;Abstract
&lt;/h2&gt;&lt;p&gt;此文章发布约一周前就已经发现该问题了，但是由于专注看官方文档和仓库进行规范 + 课内事情，一直没有得到解决。&lt;/p&gt;
&lt;p&gt;在发文前一天发现此问题需要重点解决（无法避免），询问了师兄（论文作者）并咨询了相关团队，未果，所以花了两整天才解决这一个bug。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;issue&#34;&gt;Issue
&lt;/h2&gt;&lt;h3 id=&#34;what-happened--what-you-expected-to-happen&#34;&gt;What happened + What you expected to happen
&lt;/h3&gt;&lt;p&gt;Running the following snippet will hang indefinitely&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;&amp;gt;&amp;gt; import  ray
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;&amp;gt;&amp;gt; ray.init()
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2025-09-20 11:44:47,741 INFO worker.py:1538 -- Started a local Ray instance.  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Sometimes it will fail instead&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[2025-09-20 11:50:22,050 E 31652 31652] core_worker.cc:179: Failed to register worker 01000000ffffffffffffffffffffffffffffffffffffffffffffffff to Raylet. IOError: [RayletClient] Unable to register worker with raylet. No such file or directory
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;versionsdependencies&#34;&gt;Versions/Dependencies
&lt;/h3&gt;&lt;p&gt;Python 3.10.18&lt;br&gt;
Ray 2.49.1&lt;br&gt;
grpcio 1.75.0&lt;br&gt;
Ubuntu 24.04.2 LTS&lt;/p&gt;
&lt;h3 id=&#34;reproduction-script&#34;&gt;Reproduction script
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import ray
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ray.init()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;issue-severity&#34;&gt;Issue Severity
&lt;/h3&gt;&lt;p&gt;High: It blocks me from completing my task.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;上面全英是因为当时要提issue或者给Ray框架作者发邮件，但是后来解决了，就打算留下来了，这样后来的人可以模仿一下这个写法。&lt;/p&gt;
&lt;h2 id=&#34;可能的问题&#34;&gt;可能的问题
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;1.workers实际上并没有启动。（可以看一下&lt;code&gt;/tmp/ray/session_latest/raylet.out&lt;/code&gt;,如果在&lt;code&gt;/tmp/ray/session_latest/&lt;/code&gt;看到有前缀&lt;code&gt;python-core-worker-&lt;/code&gt; 的可以看一下，因为这个能了解工作进程可能发生了什么）&lt;/li&gt;
&lt;li&gt;2.系统中进程数/线程数设置错误（可以通过cat /proc/sys/kernel/threads-max查看系统中一个进程可以创建多少个线程）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;可能的方法&#34;&gt;可能的方法
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;1.在&lt;code&gt;import ray&lt;/code&gt;之后加上&lt;code&gt;ray.init(num_cpus=56, num_gpus=2)&lt;/code&gt;。具体参数需要根据服务器进行自定义。
作者根据这个方法对自己进行了适配解决了问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;具体操作yhyverltrainerconfigppo_traineryaml配置文件中对num_cpus0修改成num_cpus10-num_gpus1进行定义&#34;&gt;具体操作：&lt;code&gt;/yhy/verl/trainer/config/ppo_trainer.yaml&lt;/code&gt;配置文件中对&lt;code&gt;num_cpus=0&lt;/code&gt;修改成&lt;code&gt;num_cpus=10&lt;/code&gt;, &lt;code&gt;num_gpus=1&lt;/code&gt;进行定义。
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;2.升级&lt;code&gt;grpcio&lt;/code&gt;,2023年的时候安装&lt;code&gt;grpcio 1.48.1&lt;/code&gt; 版本是有用的,相应的&lt;code&gt;venv&lt;/code&gt;是 &lt;code&gt;CentOS 7,Python 3.7.11，Ray 2.5.1,grpcio1.48.1&lt;/code&gt;。&lt;br&gt;
但我进行升级的时候，无法解决该问题，并且会导致包之间的冲突。（是一个opencv的包，已经&lt;code&gt;pip install&lt;/code&gt;了）&lt;/li&gt;
&lt;li&gt;3.添加&lt;code&gt;ulimit -n 65536&lt;/code&gt;语句，因为分布式训练一开始可能会开成千上万个进程，默认是4096，所以会导致线程创建失败。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;感觉这点也是有用的但可能不是主要因素&#34;&gt;感觉这点也是有用的，但可能不是主要因素？
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;4.一定要设置参数,只是用&lt;code&gt;ray.init()&lt;/code&gt;就会崩溃。需要手动设置&lt;code&gt;num_cpus&lt;/code&gt;。&lt;br&gt;
这点和1重复了，可以说是大家实验得到的结论？（也许）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;近期其他人也遇到过该问题&#34;&gt;近期其他人也遇到过该问题
&lt;/h2&gt;&lt;p&gt;2024.1.16也有在&lt;code&gt;Ubuntu 20.04&lt;/code&gt;上遇到同样的问题 &lt;code&gt;venv: ray == 2.7.1,grpcio == 1.59.2,python == 3.11.5&lt;/code&gt;&lt;br&gt;
2024.4.2有在&lt;code&gt;ubuntu 22.04.3&lt;/code&gt;（docker内部）上遇到同样的问题，但是他只是失败，而不是挂起。在docker之外运行良好（他的M1 MacBook上）&lt;/p&gt;
&lt;p&gt;2024.4.14，2024.4.17，2024.7.11等等太多人遇到同样的问题了&lt;/p&gt;
&lt;h2 id=&#34;至此问题的解决方案已经讲述完毕&#34;&gt;至此，问题的解决方案已经讲述完毕。
&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&#34;回顾解决问题的流程&#34;&gt;回顾解决问题的流程
&lt;/h3&gt;&lt;p&gt;刚遇到这个问题，我先看了一下是不是自己遇到过的，发现没有就交给了copilot，发现copilot无法解决，给了chatgpt5，同样无法解决，又给了Gemini看看能不能有些新意（其实这步可以忽略），上述方法都不行，问了师兄是否遇到过。&lt;/p&gt;
&lt;p&gt;发现他们都没有遇到过，我只能去Ray官方仓库里面的issue进行查看。感觉现在人们都不怎么用StackOverflow等等论坛了，所以就只能去issue里面找了。&lt;/p&gt;
&lt;p&gt;幸运的是发现了很多人遇到了同样的问题和报错，我就开始追根溯源，发现从17.18年就有人提出了这个问题，当时也有相应的解决办法，但是随着版本更新变得不适用。&lt;br&gt;
我就开始收集所有对这个问题的理解和解决方案，逐个尝试，很幸运的是我debug成功了！&lt;/p&gt;
&lt;p&gt;因为论文中没有常见的问题的解决方案，如果有的话应该是第一步先去看的。&lt;/p&gt;
&lt;p&gt;这就是我整个解决这个问题的流程，大体上看似乎没有太大问题。但是还是可以优化一下，下次遇到类似比较“偏”的问题可以更快，心态更平和地解决这个问题。&lt;/p&gt;
&lt;h3 id=&#34;看到这里了祝你遇到像我遇到的这样比较偏门的问题时也可以顺利并更快地解决&#34;&gt;看到这里了，祝你遇到像我遇到的这样比较“偏门”的问题时，也可以顺利并更快地解决！
&lt;/h3&gt;</description>
        </item>
        <item>
        <title>RUC科研之旅</title>
        <link>http://localhost:1313/p/ruc-study-framework/</link>
        <pubDate>Tue, 16 Sep 2025 10:00:00 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ruc-study-framework/</guid>
        <description>&lt;img src="http://localhost:1313/p/ruc-study-framework/RUC.jpg" alt="Featured image of post RUC科研之旅" /&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/ruc-study-framework/AI-Box.jpg&#34;
	width=&#34;200&#34;
	height=&#34;200&#34;
	srcset=&#34;http://localhost:1313/p/ruc-study-framework/AI-Box_hu_dd5bef9123c22f74.jpg 480w, http://localhost:1313/p/ruc-study-framework/AI-Box_hu_3cf40d827e974d65.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;AI Box小组&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;科研日记&#34;&gt;科研日记
&lt;/h1&gt;&lt;p&gt;用来记录我远程实习的日子&lt;/p&gt;
&lt;h4 id=&#34;20250716&#34;&gt;2025.07.16
&lt;/h4&gt;&lt;p&gt;成为赵老师的本科实习生，暑假跟着师兄做了一个横向&lt;/p&gt;
&lt;h5 id=&#34;家里网好差本来服务器就慢还是要在学校多用功&#34;&gt;家里网好差（本来服务器就慢），还是要在学校多用功
&lt;/h5&gt;&lt;p&gt;暑假一共6周，还有各种事情，加上休息吃饭探亲balabala也做不了太多事情。确定了方向，看了一些知乎上的论文解读（后面发现如果要通透还是要看原文）。&lt;/p&gt;
&lt;h4 id=&#34;20250916&#34;&gt;2025.09.16
&lt;/h4&gt;&lt;p&gt;近期在搞论文复现的实验，跟上课题组的进度&lt;/p&gt;
&lt;p&gt;今天在修改run_dapo.sh脚本的时候发现了几个常见的问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.sh的格式十分严格&lt;/li&gt;
&lt;li&gt;Parquet文件格式&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/680143641&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Parquet文件格式讲解&lt;/a&gt;👈&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;vibe coding脚本是无比正确的。&lt;br&gt;
不知不觉已经两个月了，但对我而言收获是颇多的。&lt;/p&gt;
&lt;h5 id=&#34;选择一个好组是十分重要的软院tic高瓴ai-box让我深刻感受到了好的氛围成套的培养体系&#34;&gt;选择一个好组是十分重要的！软院TIC，高瓴AI BOX让我深刻感受到了好的氛围，成套的培养体系！
&lt;/h5&gt;&lt;h5 id=&#34;希望自己可以平衡好课内科研还有生活等等其他方面&#34;&gt;希望自己可以平衡好课内＋科研，还有生活等等其他方面
&lt;/h5&gt;&lt;p&gt;晚上睡前简单看了一下verl官方文档里面Config Explanation的Data部分&lt;/p&gt;
&lt;h5 id=&#34;梯度下降的三种常见形式&#34;&gt;梯度下降的三种常见形式
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;1.Batch Gradient Descent（批量梯度下降）&lt;/li&gt;
&lt;li&gt;2.Stochastic Gradient Descent (SGD，随机梯度下降)&lt;/li&gt;
&lt;li&gt;3.Mini-batch Gradient Descent（小批量梯度下降）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;几个epoch就是过几次数据集，实践中把 “batch” 这个词用得比较宽：在框架/代码里 batch_size 常指 mini-batch 的大小，所以容易混淆 “batch gradient descent” 与 “mini-batch”。&lt;/p&gt;
&lt;h5 id=&#34;prompt_key&#34;&gt;prompt_key
&lt;/h5&gt;&lt;p&gt;这个不是学术上固定的术语，而是很多框架（比如 HuggingFace、VERL、LangChain 等）里常见的实现细节。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 字典 / JSON / 配置文件 里，用来标记某个 prompt 的 键名（key）。&lt;/li&gt;
&lt;li&gt;这样做可以在代码里快速查找/复用不同的 prompt 模板。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;prompts = {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;translation&amp;#34;: &amp;#34;Translate the following English text into Chinese: {text}&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;summarization&amp;#34;: &amp;#34;Summarize the following paragraph: {text}&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;qa&amp;#34;: &amp;#34;Answer the question based on the context: {context}\nQuestion: {question}&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这里 &amp;ldquo;translation&amp;rdquo;, &amp;ldquo;summarization&amp;rdquo;, &amp;ldquo;qa&amp;rdquo; 就是 prompt_key，
而它们对应的 value 就是具体的 prompt 模板。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Prompt = 给模型的输入提示，引导它完成任务。&lt;br&gt;
Prompt_key = 在程序里标记或索引 prompt 模板的“名字/键”，方便管理和调用。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;RM（Reward Model，奖励模型）：在 RLHF 里给生成结果打分的模型。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果使用基于模型的 RM，并且策略和 RM 的聊天模板不同，则需要设置data.return_raw_input_ids=True
data.return_full_prompt=True
用户输入：你好，介绍一下强化学习
返回：[INST] 你好，介绍一下强化学习 [/INST]
data.return_raw_chat=True
用户输入：你好，介绍一下强化学习
返回的就是:你好，介绍一下强化学习&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;20250917&#34;&gt;2025.09.17
&lt;/h4&gt;&lt;p&gt;早晨起来去工位继续看verl&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;actor_rollout_ref.hybrid_engine：是否是混合引擎，目前只支持混合引擎.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Dropout 是一种 正则化方法，用来防止神经网络过拟合。在训练时，随机“丢弃”一部分神经元（让它们暂时不参与计算和更新）。推理时,不再丢弃任何神经元，只是使用完整的输出。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;actor_rollout_ref.model.use_remove_padding一般都选true移除&lt;code&gt;&amp;lt;PAD&amp;gt;&lt;/code&gt;来加速推理，但是多模态或者大工程里仍有人使用false&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Temperature （温度）。T = 1 → 正常分布。T &amp;gt; 1 → 分布更平滑，增加随机性，容易生成多样化甚至跑偏的内容。T &amp;lt; 1 → 分布更尖锐，模型更确定（更倾向选概率最高的 token，输出保守）。&lt;br&gt;
Top-k：从 softmax 排序后的前 k 个 token 中随机抽样。&lt;br&gt;
Top-p：动态选择前 累计概率 ≥ p 的最小 token 集合，从里面采样。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Actor:负责 更新参数&lt;br&gt;
Ref (Reference Model):负责 对比/约束。它是冻结的（不更新），通常是最初的预训练模型。&lt;br&gt;
Rollout:负责 产生输出（推理采样）&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;EOS = End Of Sequence（序列结束标记）。在 tokenizer 里，EOS 往往是个特殊的 &lt;code&gt;&amp;lt;/s&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;eos&amp;gt;&lt;/code&gt; 符号。ignore_eos=True 在训练中一般少用，除非你需要 生成固定长度序列，或者想收集超过 EOS 的 rollouts 数据。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;20250919&#34;&gt;2025.09.19
&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;一个深度学习训练任务中，nodes 指的是计算机，而 gpus-per-node 指的是每台计算机上安装的 GPU 数量。&lt;br&gt;
可以把 nodes 理解为一台台服务器，每台服务器里可以插上多张显卡（GPU）。&lt;br&gt;
nnodes: 1：你正在使用一台计算机来运行任务。&lt;br&gt;
n_gpus_per_node: 8：这台计算机上插了 8 张 GPU。&lt;br&gt;
所以，这个配置的意思是，你用一台装有 8 张 GPU 的服务器来运行你的任务。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;verl官方文档看完了，嗯。。还是要去看仓库&lt;/p&gt;
&lt;p&gt;都在赶iclr导致服务器又变得卡卡的&lt;/p&gt;
&lt;p&gt;实验复现遇到了问题导致一直是卡住的状态&lt;/p&gt;
&lt;p&gt;神器：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pkill -9 -u $USER -f ray&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;20250920&#34;&gt;2025.09.20
&lt;/h4&gt;&lt;p&gt;ray官方仓库，试图解决Ray实例后ray.init()挂起/失败问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;import  ray
ray.init()
2025-09-20 11:44:47,741 INFO worker.py:1538 &amp;ndash; Started a local Ray instance.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;有时候会卡住&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;python
import  ray
ray.init()
2025-09-20 11:44:47,741 INFO worker.py:1538 &amp;ndash; Started a local Ray instance.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;有时候会失败&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[2025-09-20 11:50:22,050 E 31652 31652] core_worker.cc:179: Failed to register worker 01000000ffffffffffffffffffffffffffffffffffffffffffffffff to Raylet. IOError: [RayletClient] Unable to register worker with raylet. No such file or directory&lt;/p&gt;&lt;/blockquote&gt;
&lt;h5 id=&#34;versionsdependencies&#34;&gt;Versions/Dependencies
&lt;/h5&gt;&lt;p&gt;Python 3.10
Ray
grpcio
OS:&lt;/p&gt;
&lt;h5 id=&#34;reproduction-script&#34;&gt;Reproduction script
&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;import ray
ray.init()&lt;/p&gt;&lt;/blockquote&gt;
&lt;h5 id=&#34;issue-severity&#34;&gt;Issue Severity
&lt;/h5&gt;&lt;p&gt;High:It blocks me from completing my task.&lt;/p&gt;
&lt;p&gt;可能的原因:1.workers实际上没有启动
2.系统中一个进程可以创建多少个线程？（可以通过cat /proc/sys/kernel/threads-max查看）&lt;/p&gt;
&lt;p&gt;可能的方法:1.在import ray后添加 ray.init(num_cpus=56, num_gpus=2)  这个方法很多人似乎有帮助，但不是一个好的解决方案
2.可以看一下/tmp/ray/session_latest/raylet.out,如果在/tmp/ray/session_latest/看到有前缀python-core-worker- 的可以看一下，因为这个能了解工作进程可能发生了什么
3.升级grpcio,2023年的时候安装grpcio 1.48.1 版本是有用的,相应的venv是 CentOS 7,Python 3.7.11，Ray 2.5.1,grpcio1.48.1
4.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#!/bin/bash
ulimit -n 65536
python3 -m verl.trainer.main_ppo &amp;hellip;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;5.一定要设置参数,只是用ray.init()就会崩溃。需要手动设置num_cpus&lt;/p&gt;
&lt;p&gt;其他人：
2024.1.16也有在Ubuntu 20.04上遇到同样的问题 venv: ray == 2.7.1,grpcio == 1.59.2,python == 3.11.5
2024.4.2有在ubuntu 22.04.3（docker内部）上遇到同样的问题，但是他只是失败，而不是挂起。在docker之外运行良好（他的M1 MacBook上）&lt;/p&gt;
&lt;p&gt;2024.4.14，2024.4.17，2024.7.11等等太多人遇到同样的问题了&lt;/p&gt;
&lt;p&gt;15点左右,/yhy/verl/trainer/config/ppo_trainer.yaml配置文件中进行修改&lt;/p&gt;
&lt;h5 id=&#34;问题已解决在import-ray后添加-rayinitnum_cpus56-num_gpus2&#34;&gt;问题已解决！在import ray后添加 ray.init(num_cpus=56, num_gpus=2)
&lt;/h5&gt;&lt;p&gt;今天最开心的事情，自己成功看issue，扒仓库源码等等解决了这个问题&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第一篇文章</title>
        <link>http://localhost:1313/p/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</link>
        <pubDate>Mon, 15 Sep 2025 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</guid>
        <description>&lt;img src="http://localhost:1313/p/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/first-blog-cover.jpg" alt="Featured image of post 第一篇文章" /&gt;&lt;p&gt;欢迎你能来到我的第一篇文章！&lt;/p&gt;
&lt;h2 id=&#34;为什么要写博客&#34;&gt;为什么要写博客？
&lt;/h2&gt;&lt;p&gt;写博客对我来说有着特殊的意义：&lt;/p&gt;
&lt;h3 id=&#34;对自己&#34;&gt;对自己
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;记录笔记&lt;/strong&gt;：把学到的东西都记下来，以后可以复习&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;积攒经验&lt;/strong&gt;：积攒宝贵的经验&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;记录进步&lt;/strong&gt;：记录自己的进步&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;对他人&#34;&gt;对他人
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;感谢师父&lt;/strong&gt;：感谢文聪学长的帮助，永远的师傅！&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传承精神&lt;/strong&gt;：希望后来者能够更快速地入门&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分享内容&lt;/strong&gt;：希望其他人能够更快地了解我&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;博客内容规划&#34;&gt;博客内容规划
&lt;/h2&gt;&lt;p&gt;我计划我的文章中记录以下内容：&lt;/p&gt;
&lt;h3 id=&#34;笔记-notes&#34;&gt;笔记 (Notes)
&lt;/h3&gt;&lt;p&gt;可能比较杂，什么都有。但重点是关于强化学习的内容&lt;/p&gt;
&lt;h3 id=&#34;理论-theory&#34;&gt;理论 (Theory)
&lt;/h3&gt;&lt;p&gt;一些理论知识&lt;/p&gt;
&lt;h3 id=&#34;日记-diary&#34;&gt;日记 (Diary)
&lt;/h3&gt;&lt;p&gt;记录一些自己的日常，探讨人生&lt;/p&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语
&lt;/h2&gt;&lt;p&gt;写博客是一个长期的过程，也应该是一个很开心的过程！&lt;/p&gt;
&lt;p&gt;&lt;em&gt;这篇文章写于 2025年9月15日，是我博客的第一篇文章。希望它能成为一个美好的开始。&lt;/em&gt;&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
